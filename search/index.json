[{"content":"这是第一篇文章——\n","date":"2022-03-06T00:00:00Z","image":"https://demo.stack.jimmycai.com/p/hello-world/cover_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://demo.stack.jimmycai.com/p/hello-world/","title":"Hello Hugo"},{"content":"微信表情包保存与破解探索 很多网上的方法现在都已经失效了，自己重新探索了一遍，整理了当前还有效的方法。\n顺便探索了一下PC端的加密表情文件，但没有结果哈哈。\n保存表情包 最简单的方法：微信公众号 如果只想简单直接地保存某个特定表情包，可以搜索「表情保存助手」公众号：\n关注公众号后，直接发送表情，等一会儿就会收到一个表情包下载的链接。\n试了一下存下来的 gif 质量挺不错的，也有透明底，也会动：\n这个表情包是《新月同行》的超级秋千人，特别逗的两套，可惜目前只有微信上架了……我就是为了保存她的几张表情才折腾这篇文章的！\n缺点就是这个公众号时不时要看广告。\n其他提取方法呢 另外还尝试了比较热门的几种方案。\n一、发给自己的微信公众号 为了存表情专门开个公众号有点太劳民伤财了……但……\n——还真可行。\n我估计上面的那个表情助手公众号也是相同原理，只是后台做了个自动化流程帮你把图片转存下来，然后给个临时的下来链接。\n二、文件传输助手 / 网页版微信 都不行，会显示「该类型不支持」：\n三、使用小工具 如果真的有大批量的表情想要转换，那就需要在电脑上进行操作了。\n这里有一篇指导文章：\n怎么把微信表情包存到电脑上？亲测有效！_微信表情导出到电脑 2023-CSDN博客\n大概就是用了网友「天才小网关」（神奇的ID！）开发的一个叫做「微信表情包吸血鬼」（更神奇的软件名！）工具，来把电脑上储存的加密文件给转换出来。\n我试了一下，是有用的。\n有需要的话也可以直接在这里下载工具：\n【微信表情包吸血鬼】软件，一键导出所有微信表情包，有趣的表情包，不再只限一个APP使用-软件资源-天才小网管\n但是吧，这个软件也是付费的：\n有免费模式，可以每个分类导出10个表情作为预览。\n一套表情包可能会有10几个表情，如果只是想抓几个好用的话一般也够了。\n自定义表情也能导出，但是只有10个，这样就不太够哈哈。\n导出的效果也没问题的：\n如果要求高的话可以花￥40买个注册码。\n顺便，这个开发者好像专攻微信相关的数据提取……看了一下有好多相关工具。\n我自己提取出来的在这里：\n微信提取表情包 （本地路径）\n提取微信图片（而非表情包） 虽然都是微信的媒体文件，但图片和表情好像是两套内容。\n如果想提取图片，这里也顺便找到了一个工具：WxLib\n来自：\n微信DAT文件解密（dat转图像）_微信图片dat解密工具-CSDN博客\n2022年06月，微信电脑版发布更新后，新产生的微信聊天图片不会再保存到：微信文件管理目录\\微信号\\FileStorage\\Image\\年月\n而是改成了存储到：微信文件管理目录\\微信号\\FileStorage\\MsgAttach\\聊天对象标识\\Image\\年月\n破解表情包 后面一大堆资料，零零总总的……\n但大概意思是：现在微信存的 .dat 文件都是加密过的。\n图片还好一点，用的是异或，只需要把二进制文件批量处理一遍就行。\n表情包好像加上 RSA 了，这玩意儿不搞软件逆向谁搞得定啊……！\n从天才小网管那个软件也可以倒推，是需要本机登录的微信账号的 key 的。\n这个没必要深究下去了，到此为止吧。\n总之，不好弄。\n有需求就用上面法子吧，别自己折腾了。\n博客园的帖子 最开始找到的是这个参考资料：\n搞搞电脑微信表情的破解（.dat转png or jpg） - Esquecer - 博客园\n摘要 然后找到了我微信源文件的Image文件。发现源文件都是清一色.dat格式文件。\n这时候第一步直接把后缀改了jpg :（ 很失望，不行，无法打开文件。\n然后去谷歌搜了一下，大牛们都说是 微信用异或操作加密了Jpg.\n于是朝这个方向入手。\n首先下载notepad++,再给它配上Hex-Editor插件，这样我们就能用notepad++用16进制打开dat了\n我的办法是：\n第一步：就是从网上（https://sourceforge.net/projects/npp-plugins/files/Hex%20Editor/）下载Hex-Editor.dll文件。 第二步：然后拷贝到你自己notepad安装目录的plugins子文件夹下。 第三步：最后重启notepad。\n然后在这里打开16进制显示，就好了。\n这样我们就得到了16进制源文件。\n我以下图为样例分析。\n这是打开的DAT文件，前三位是4F 96 88。按照网上大牛说了 做过了异或操作 再存储的。那么我们来试着还原。\n给出参考文件头：\nJPEG (jpg)，文件头：FFD8FF PNG (png)，文件头：89504E47 GIF (gif)，文件头：47494638 好办了，直接逐个测试下。\n我发现我这个dat 是 4F^C6 = 89,96^C6 = 50,88^C6=4E\n对应得上PNG格式的文件。\n然后就是java打开文件重新异或之后输入输出啦。\nJAVA代码(对单个文件操作，折叠的是对整个文件夹操作)\n这里有个彩蛋是：本来想用python操作文件的（方便），但是本人配置了近5小时sublime+python3，因为各种墙（GFW牛逼）的问题和各种插件需要慢慢安装体验感很差，遂投入java怀抱（真香）\n吾爱破解上的帖子 微信表情包导出工具 实测别人发的也会导出 - 『原创发布区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn\n这个是最新的，2023年5月份，看起来挺靠谱。\n但是没有 52 的账号……玩不了。\n其他 Python 一号 PC版微信加密图片解密思路与代码实现_Python_微信电脑版图片另存代码-CSDN博客\n用 Python 实现了一版，20年的，可能有点老。\n摘要：\n存储的文件均为DAT格式。不能直接打开。当用户删掉聊天记录后，又想找回丢失的图片文件会造成一定的困扰。如果能找到其加密方式就能对这类文件解密还原成jpg/png/gif等常见的文件格式。\n解密思路 这类对文件加密的方式很容易让人联想到“异或法加密”，即对文件逐个字节与加密码进行异或计算得到加密文件。 使用16进制的方式打开DAT文件，可见几乎前两个字节均为 0xDF，0xF8。 而jpg头信息前两个字节为0xFF, 0xD8。用0xDF与0xFF做异或运算，0xF8与0xD8做异或运算。结果均为0x20。因此可得加密码为0x20（但在实际操作中，每个用户的加密码都不一样，需要在程序中计算出的加密码）。 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 import os # 图片字节头信息， [0][1]为jpg头信息， [2][3]为png头信息， [4][5]为gif头信息 pic_head = [0xff, 0xd8, 0x89, 0x50, 0x47, 0x49] # 解密码 decode_code = 0 def get_code(file_path): \u0026#34;\u0026#34;\u0026#34; 自动判断文件类型，并获取dat文件解密码 :param file_path: dat文件路径 :return: 如果文件为jpg/png/gif格式，则返回解密码，否则返回0 \u0026#34;\u0026#34;\u0026#34; dat_file = open(file_path, \u0026#34;rb\u0026#34;) dat_read = dat_file.read(2) head_index = 0 while head_index \u0026lt; len(pic_head): # 使用第一个头信息字节来计算加密码 # 第二个字节来验证解密码是否正确 code = dat_read[0] ^ pic_head[head_index] idf_code = dat_read[1] ^ code head_index = head_index + 1 if idf_code == pic_head[head_index]: dat_file.close() return code head_index = head_index + 1 print(\u0026#34;not jpg, png, gif\u0026#34;) return 0 def decode_dat(file_path): \u0026#34;\u0026#34;\u0026#34; 解密文件，并生成图片 :param file_path: dat文件路径 :return: 无 \u0026#34;\u0026#34;\u0026#34; decode_code = get_code(file_path) dat_file = open(file_path, \u0026#34;rb\u0026#34;) pic_name = file_path + \u0026#34;.jpg\u0026#34; pic_write = open(pic_name, \u0026#34;wb\u0026#34;) for dat_data in dat_file: for dat_byte in dat_data: pic_data = dat_byte ^ decode_code pic_write.write(bytes([pic_data])) print(pic_name + \u0026#34;完成\u0026#34;) dat_file.close() pic_write.close() def find_datfile(dir_path): \u0026#34;\u0026#34;\u0026#34; 获取dat文件目录下所有的文件 :param dir_path: dat文件目录 :return: 无 \u0026#34;\u0026#34;\u0026#34; files_list = os.listdir(dir_path) for file_name in files_list: file_path = dir_path + \u0026#34;\\\\\u0026#34; + file_name decode_dat(file_path) path = input(\u0026#34;请输入需要解密微信dat文件的目录:\u0026#34;) find_datfile(path) Python 二号 python微信数据解密-dat文件转图片(支持JPG,PNG,GIF)_微信dat转图片-CSDN博客\n没怎么写思路，直接上的代码。\n代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 # weixin_Image.dat 破解 # JPG 16进制 FF D8 FF # PNG 16进制 89 50 4e 47 # GIF 16进制 47 49 46 38 # 微信.bat 16进制 a1 86-----\u0026gt;jpg ab 8c----jpg dd 04 ---\u0026gt;png # 自动计算异或 值 import os into_path = r\u0026#39;C:/image\u0026#39; # 微信image文件路径 out_path = r\u0026#34;C:/image/jpg\u0026#34; def main(into_path, out_path): dat_list = Dat_files(into_path) # 把路径文件夹下的dat文件以列表呈现 lens = len(dat_list) if lens == 0: print(\u0026#39;没有dat文件\u0026#39;) exit() num = 0 for dat_file in dat_list: # 逐步读取文件 num += 1 temp_path = into_path + \u0026#39;/\u0026#39; + dat_file # 拼接路径：微信图片路径+图片名 dat_file_name = dat_file[:-4] # 截取字符串 去掉.dat imageDecode(temp_path, dat_file_name, out_path) # 转码函数 value = int((num / lens) * 100) # 显示进度 print(\u0026#39;正在处理---\u0026gt;{}%\u0026#39;.format(value)) def Dat_files(file_dir): \u0026#34;\u0026#34;\u0026#34; :param file_dir: 寻找文件夹下的dat文件 :return: 返回文件夹下dat文件的列表 \u0026#34;\u0026#34;\u0026#34; dat = [] for files in os.listdir(file_dir): if os.path.splitext(files)[1] == \u0026#39;.dat\u0026#39;: dat.append(files) return dat def imageDecode(temp_path, dat_file_name, out_path): dat_read = open(temp_path, \u0026#34;rb\u0026#34;) # 读取.bat 文件 xo, j = Format(temp_path) # 判断图片格式 并计算返回异或值 函数 if j == 1: mat = \u0026#39;.png\u0026#39; elif j == 2: mat = \u0026#39;.gif\u0026#39; else: mat = \u0026#39;.jpg\u0026#39; out = out_path + \u0026#39;/\u0026#39; + dat_file_name + mat # 图片输出路径 png_write = open(out, \u0026#34;wb\u0026#34;) # 图片写入 dat_read.seek(0) # 重置文件指针位置 for now in dat_read: # 循环字节 for nowByte in now: newByte = nowByte ^ xo # 转码计算 png_write.write(bytes([newByte])) # 转码后重新写入 dat_read.close() png_write.close() def Format(f): \u0026#34;\u0026#34;\u0026#34; 计算异或值 各图片头部信息 png：89 50 4e 47 gif： 47 49 46 38 jpeg：ff d8 ff \u0026#34;\u0026#34;\u0026#34; dat_r = open(f, \u0026#34;rb\u0026#34;) try: a = [(0x89, 0x50, 0x4e), (0x47, 0x49, 0x46), (0xff, 0xd8, 0xff)] for now in dat_r: j = 0 for xor in a: j = j + 1 # 记录是第几个格式 1：png 2：gif 3：jpeg i = 0 res = [] now2 = now[:3] # 取前三组判断 for nowByte in now2: res.append(nowByte ^ xor[i]) i += 1 if res[0] \u0026lt;mark\u0026gt; res[1] \u0026lt;/mark\u0026gt; res[2]: return res[0], j except: pass finally: dat_r.close() # 运行 if __name__ == \u0026#39;__main__\u0026#39;: main(into_path, out_path) csdn 的网友逆向过程 PC微信逆向获取聊天表情_微信 customemotion文件解密-CSDN博客\n这个更是只有个思路的开头，但是时间比较新，22年的。\n重点就是在 CustomEmotion 文件夹内，所有的文件开头会是 5631XXXX，\n然后这个转译过来——和图片不同——是 V1MMVX ，算是特别的内容。\n除了这6个字节，后面 1024 个字节使用 RSA 加密，剩下的部分用异或加密。\n这里还有更多微信逆向的文章：\n勇敢自由-CSDN博客\n噢，还有个机器人！\nljc545w/ComWeChatRobot: PC微信机器人，实现获取通讯录，发送文本、图片、文件等消息，封装COM接口供Python、C#调用\n不过只有针对的微信版本可用。\n","date":"2024-01-19T12:24:00Z","image":"https://demo.stack.jimmycai.com/p/2024-%E5%B9%B4%E5%A6%82%E4%BD%95%E4%BF%9D%E5%AD%98%E5%BE%AE%E4%BF%A1%E8%A1%A8%E6%83%85%E5%8C%85%E4%BB%A5%E5%8F%8A%E7%A0%B4%E8%A7%A3%E7%9A%84%E6%8E%A2%E7%B4%A2/Assets/240119_%E5%BE%AE%E4%BF%A1%E8%A1%A8%E6%83%85%E5%8C%85%E4%BF%9D%E5%AD%98%E4%B8%8E%E7%A0%B4%E8%A7%A3%E6%8E%A2%E7%B4%A2-img-1_hua73380a102da20bf0712a1a6c2ea54d4_527983_120x120_fill_box_smart1_3.png","permalink":"https://demo.stack.jimmycai.com/p/2024-%E5%B9%B4%E5%A6%82%E4%BD%95%E4%BF%9D%E5%AD%98%E5%BE%AE%E4%BF%A1%E8%A1%A8%E6%83%85%E5%8C%85%E4%BB%A5%E5%8F%8A%E7%A0%B4%E8%A7%A3%E7%9A%84%E6%8E%A2%E7%B4%A2/","title":"2024 年如何保存微信表情包（以及破解的探索）"},{"content":"iOS快捷创建模板化md文档的方式 前情 如 ████ 所说，终于开始使用 Git 进行 Obsidian 的同步了！\n与此同时，使用 Working Copy 进行 Github 的仓库同步，然后用 MWeb 进行文档的编辑和查看。\n关于 App 的选择，详见：████\n为什么不用 Obsidian 原生 iOS 应用呢？\n——因为 Ob 的原生应用不支持访问外部文件夹，反而没法和 WorkingCopy 同步下来的文件进行交互。\n（而我不舍得订阅 Obsidian 官方 Sync 服务x）\n我的需求 总之，既然千辛万苦解决了 iOS 端的同步问题，那当然是想在手机上能够方便地查看和添加文件的。\n查看目前没啥问题，用 MWeb 就能搞定。\n添加的话……\n虽说也可以用“新建文件”的方式，但是那样和我自己的工作流非常不同意。\n举个例子，我的Zettelkasten卡片盒文件夹，专门用来收集一些零散的信息。\n它需要创建在 Obsinote/Zettelkasten/年份-月份/日期前缀_笔记名称.md 的路径下。\n举个例子，今天是2024年1月9日，我想要添加一个叫做“iOS快捷创建模板化md文档的方式”的笔记，那它应该存在这个路径下：\nObsinote/Zettelkasten/2024-01/240109_iOS快捷创建模板化md文档的方式.md\n整体结构如图：\n与此同时，文件内应该自动添加这样的 frontmatter 属性：\n1 2 3 4 5 6 7 8 --- title: {笔记标题} description: date: {创建日期} lastmod: tags: aliases: --- 这一系列模板化的、和当前日期绑定的文本内容，靠自己手填显然是不现实的……\n所以我们需要——自动化！\n快捷指令，登场 在现如今的 iOS 上玩自动化，第一时间想到的当然是官方的 快捷指令（Shortcuts）。\n正如在 PC 端第一时间想到是 Quicker！\n保存文本文件 首先尝试了一下“创建文件”，是可以的。\n具体方法就是：\n添加一个「文本」节点 用「保存文件」节点，将文本内容储存到指定位置 看上去一切顺利，不过有一个问题：\n不管我怎么指定文件的后缀名，它都会存成 .txt 文件，而不是我希望的 .md 文件。\n经过一番调查，发现应该用「更改名称」节点，变成这样的流程：\n添加「文本」节点 用「更改名称」节点将文本的名称修改成「xxx.md」 用「保存文件」去储存「更改名称后的项目」 只有用这种方法才能存下 非txt格式 的文本文件！\n格式化内容 第一部分：日期\n这个倒是比较容易，变量填空里自带一个 当前日期 的变量。\n添加之后点击一下，格式修改为 自定义，然后按照自己希望的日期格式填写就好了。\n比如我的文件夹路径是：Zettelkasten/yyyy-MM\n文件名前缀则是：yyMMdd_\n第二部分 frontmatter 元数据也很简单，直接填写在「文本」节点内部就好。\n记得在 属性: 后面需要有一个空格！\n用户输入 最后，添加两个用户输入，分别获得笔记的名称和内容，拼合在一起就大功告成啦！\n文件储存完后还可以加一个 WorkingCopy 的节点，直接在软件内显示这个新创建的笔记，方便快速编辑。\n（可惜 MWeb 好像不支持快捷指令……）\n最后的结果如下：\n第一部分：获取用户输入，并填写基本的模板\n第二部分：保存到指定位置并打开\n你也可以直接下载我分享的快捷指令：\n——以上！\n","date":"2024-01-19T00:56:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E5%A6%82%E4%BD%95%E5%9C%A8-ios-%E4%B8%8A%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E5%B8%A6%E6%9C%89%E6%A8%A1%E6%9D%BF%E7%9A%84md%E6%96%87%E6%A1%A3/","title":"如何在 iOS 上快速创建带有模板的md文档"},{"content":"非常简单的早起小技巧 昨天尝试了一下，发现挺有效的。\n就一句话：睡前把手机放电脑桌上。\n其实也不一定要是电脑桌，各种远离床铺的地方都可以。\n这样一来可以避免睡前继续玩手机；二来早上也减少了赖床的几率。\n对我而言，“醒不来”的情况其实是少数，生物钟已经养成了；更多时候是“醒了但是趴在床上玩手机”，以至于迟迟不起。\n手机不在床上=可以早睡=可以早起，非常 Nice！\n唯一需要做的就是在睡前的时候，动那么一个念头：别把手机带上床。\n想起来 TED 有一期关于拖延症的讲座，大脑里存在一只“调皮猴子”，在拖着我们玩耍、不干正事儿——\n而这个小技巧就在于，趁着猴子不在活跃的时候，把它的方向盘放到看不见的地方，以此减少猴子活动的概率！\n对于起不来的情况，其实这种方式也可以通过这种方式，让手机闹钟在你触手不可及的地方——然后不得不爬起来关闹钟。\n而一旦脱离了床的封印，想要醒过来也是不那么难的事儿了！\n","date":"2024-01-16T09:46:00Z","image":"https://demo.stack.jimmycai.com/p/%E9%9D%9E%E5%B8%B8%E7%AE%80%E5%8D%95%E7%9A%84%E6%97%A9%E8%B5%B7%E5%B0%8F%E6%8A%80%E5%B7%A7/Assets/2024.01.16-%E9%9D%9E%E5%B8%B8%E7%AE%80%E5%8D%95%E7%9A%84%E6%97%A9%E8%B5%B7%E5%B0%8F%E6%8A%80%E5%B7%A7-img-1_hu6ca3c1bac6fc79d2d662530688aaad50_266667_120x120_fill_box_smart1_3.png","permalink":"https://demo.stack.jimmycai.com/p/%E9%9D%9E%E5%B8%B8%E7%AE%80%E5%8D%95%E7%9A%84%E6%97%A9%E8%B5%B7%E5%B0%8F%E6%8A%80%E5%B7%A7/","title":"非常简单的早起小技巧"},{"content":"使用 ShareX 做出带各种效果的截图 注释\n2023.12.26 使用 Snipaste 截出圆角矩形带阴影的截图\n根据下面 Untag 的页面，感觉带底色的截图也挺好看的！\n尝试实现一下看看。\nShareX 有一个功能是截图后自动增加特效/水印：\n在任务设置里可以进行配置：\n对于添加背景，可以用这几个步骤：\nRounded Corners：8 Shadow： Opacity 0.6 Size 12 Canvas：10 （用来向外拓展画布） Background：填充底色 配置代码如下，可以用左下角按钮直接导入。（新版不支持剪贴板导入了）\n注释\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 { \u0026#34;Name\u0026#34;: \u0026#34;添加背景\u0026#34;, \u0026#34;Effects\u0026#34;: [ { \u0026#34;$type\u0026#34;: \u0026#34;ShareX.ImageEffectsLib.RoundedCorners, ShareX.ImageEffectsLib\u0026#34;, \u0026#34;CornerRadius\u0026#34;: 8, \u0026#34;Enabled\u0026#34;: true }, { \u0026#34;$type\u0026#34;: \u0026#34;ShareX.ImageEffectsLib.Shadow, ShareX.ImageEffectsLib\u0026#34;, \u0026#34;Opacity\u0026#34;: 0.6, \u0026#34;Size\u0026#34;: 12, \u0026#34;Darkness\u0026#34;: 0.0, \u0026#34;Color\u0026#34;: \u0026#34;Black\u0026#34;, \u0026#34;Offset\u0026#34;: \u0026#34;0, 0\u0026#34;, \u0026#34;Enabled\u0026#34;: true }, { \u0026#34;$type\u0026#34;: \u0026#34;ShareX.ImageEffectsLib.Canvas, ShareX.ImageEffectsLib\u0026#34;, \u0026#34;Margin\u0026#34;: \u0026#34;10, 10, 10, 10\u0026#34;, \u0026#34;Color\u0026#34;: \u0026#34;Transparent\u0026#34;, \u0026#34;Enabled\u0026#34;: true }, { \u0026#34;$type\u0026#34;: \u0026#34;ShareX.ImageEffectsLib.DrawBackground, ShareX.ImageEffectsLib\u0026#34;, \u0026#34;Color\u0026#34;: \u0026#34;252, 224, 76\u0026#34;, \u0026#34;UseGradient\u0026#34;: false, \u0026#34;GradientType\u0026#34;: \u0026#34;Vertical\u0026#34;, \u0026#34;Color2\u0026#34;: \u0026#34;White\u0026#34;, \u0026#34;UseCustomGradient\u0026#34;: false, \u0026#34;Gradient\u0026#34;: { \u0026#34;Type\u0026#34;: \u0026#34;Vertical\u0026#34;, \u0026#34;Colors\u0026#34;: [ { \u0026#34;Color\u0026#34;: \u0026#34;68, 120, 194\u0026#34;, \u0026#34;Location\u0026#34;: 0.0 }, { \u0026#34;Color\u0026#34;: \u0026#34;13, 58, 122\u0026#34;, \u0026#34;Location\u0026#34;: 50.0 }, { \u0026#34;Color\u0026#34;: \u0026#34;6, 36, 78\u0026#34;, \u0026#34;Location\u0026#34;: 50.0 }, { \u0026#34;Color\u0026#34;: \u0026#34;23, 89, 174\u0026#34;, \u0026#34;Location\u0026#34;: 100.0 } ] }, \u0026#34;Enabled\u0026#34;: true } ] } 利用这个后处理就可以方便地截取出这种样式的图片了！\n新版特效库 现在 v15.0 直接变成 sxie 文件了，不过不影响，内核还是那个 config.json\n保存方式变成了点击「打包器」然后存成 sxie 文件。\n如果是绿色版，可以通过 把 sxie 文件拖入这个窗口 来安装其他的特效。\n官方推出了图像效果预设库：Image effects - ShareX\n搞笑特效 有一个特效是在截图上加一根假的头发：\n好好笑，草。别说，做的还挺像真的！\n多区域模式 Tips：在截图选项里开启 多区域模式 之后：\n就不会一键直接截图，而是可以反复调整具体尺寸了（和 Snipaste 保持一致）；\n而且可以把截取的多个图像直接拼贴在一起。\n可惜不能对每张都加圆角矩形，嗐。\n图片体积 压缩成其他格式 有两个外部方案：\n使用ShareX和Markdown Image自动压缩截图为WebP格式并一键插入Markdown文档 - 柯罗krau的博客 | krau\u0026rsquo;s blog 这个添加了一个 ShareX 动作去快速转换 webp 格式并复制。\nSharex 截图压缩并转换成 webp格式 | 悠哉哉 这个依赖了 ImageMagick 去二次压缩。\npng 和 jpg 的对比 png 格式：526 KB\njpg 格式：80 KB\n体积相差了 6.5 倍……唔，还是用 jpg + 纯色背景吧！\n顺便，用 Snipaste 截图了同样大小的图片，575 KB，差不多呢……\n可以在这里设置截图的格式：\nWebp 呢？ 支持吗——\n噢，是支持的！\n那其实尝试用 Webp 也说不定可以。\n从这张 Logo 来看，体积大概是 png 的 1/3。\n（那其实还是 jpg 更小噢）\n文件命名 在这里设置：\n在使用 ShareX 作为文件粘贴 的时候，会保留文件名，这个时候命名是有效的。\n否则，会按照图片来自动重命名。\n如果想设置重命名格式的话，可以参考 ████ 部分。\n","date":"2024-01-14T00:17:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E4%BD%BF%E7%94%A8-sharex-%E5%81%9A%E5%87%BA%E5%B8%A6%E5%90%84%E7%A7%8D%E6%95%88%E6%9E%9C%E7%9A%84%E6%88%AA%E5%9B%BE/","title":"使用 ShareX 做出带各种效果的截图"},{"content":"使用 Snipaste 截出圆角矩形带阴影的截图 跑题但有效：使用 ShareX 做出带圆角阴影和底色的截图 详见：231228_使用 ShareX 做出带各种效果的截图\n起因 是在之前一个帖子里看到的效果。\n231226_Dynamic Highlights 时间和用时数字变色\n一开始的研究：\n从 请求自动添加阴影和窗口圆角 · Issue #1510 · Snipaste/feedback 来看，还不支持。有个叫 iShot 的看起来能支持。\n等下，是支持的！\n截图窗口左上角能加一个选项。\n然后 WinSnap 支持阴影但是不支持圆角矩形。\n顺便，看到这个页面：\n用 Shortcuts 给窗口截图加边框 - #UNTAG\n很漂亮的个人博客！ ^b2t9zp\n（其实不是博客，应该算是一种少数派 Alter 的工具资讯站）\n重要的是这个页面不仅好看而且实用！\n提到了 Shortcuts 快捷指令的使用，以及「填充边框」这样来避免版透明色带来的体积问题。\nSnipaste 里如何实现呢？ 在截图的这里，点击，更改成圆角（快捷键 U ）：\n然后工具栏这里，勾选阴影：\n注意：还有一点！ 设置里最好勾选这个「复制图像为文件」：\n不然直接作为图片格式可能会变成下面这个丑模样：\n大概是因为透明通道的问题\n副作用：粘贴进 Obsidian 的文件命名 由于是文件，所以粘贴进 Ob 的时候命名会是文件名：\n——也就是说，这时候 Snipaste 的命名配置就会有用了！\n自动化一点呢？ 现在可以用 U 快速切换圆角，但是阴影选项还要手动切换，有点麻烦。\n包括复制为文件也要用 Ctrl+Alt+C 来完成。\n能更方便吗？\n命令行选项 - Snipaste\n结合 --shadow 获取带阴影截图；结合 --no-shadow 获取不带阴影截图。\n这样的话，可以用命令行截图来强制带阴影，第二部也搞定。\n如： snip -o file-dialog;clipboard 会在截屏选区确定后自动复制截图，并弹出文件保存对话框。\n那我们可以：\nsnip --shadow -o clipboard\n然后在这里进行自定义：\n效果：\nNahh 不行，阴影会加上，但不是作为文件保存的。\n是不是可以用 -o exec 来保存文件并复制？\n或者就干脆把 注意：还有一点！ 里的设置变成默认开好叻。\nOK，这样可以咯。\n分配了一个快捷键：\n这样常态是普通的截图（直角矩形无阴影），用这个特殊的「带截图阴影」则是截取美观截图（圆角矩形带阴影）。\nFinish！\n🤔 可惜直角矩形和圆角矩形的切换好像还不能在命令行和里……\n这个倒是因为有快捷键可以配合 QK 自动化；或者也可以提 FR 试试。\n主要是频率可能不高，就先这样吧，到此为止！\n（总之还是提了个 Issue： [FR] 命令行添加参数：指定圆角矩形截图、作为文件输出 · Issue #2810 · Snipaste/feedback ）\n#EOF\n","date":"2024-01-02T19:57:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E4%BD%BF%E7%94%A8-snipaste-%E6%88%AA%E5%87%BA%E5%9C%86%E8%A7%92%E7%9F%A9%E5%BD%A2%E5%B8%A6%E9%98%B4%E5%BD%B1%E7%9A%84%E6%88%AA%E5%9B%BE/","title":"使用 Snipaste 截出圆角矩形带阴影的截图"},{"content":"（从 SketchFab 下载下来的也可以参考这个，大概）\n前言 导入进去之后材质会丢掉，怎么会是呢？\n参考这个教程：\n油管地址\n先选 Export 然后选择 .fbx 格式；\nBlender 里的纹理 SketchFab 下载过来的模型是分开的，导入 Blender 会显示白模。\n怎么把纹理贴图重新加回去呢？\n要用到插件 Node Wrangler ；\n首先导入模型，然后打开 Shading 界面：\n选中物体，右边的属性界面切到材质：\n如果没有的话就先按加号新建一个；\n然后在着色器窗口能看到两个节点，\n选中 Principled BSDF，然后按快捷键 Ctrl+Shfit+T；\n在打开的窗口中全选材质图片：\n插件就会自动创建好各个节点：\n打包纹理 导出-\u0026gt;fbx 格式：\nPath Mode 选成 Copy：\n然后勾选边上的 Embed Textures 按钮：\n这样才能把纹理一起打包进去。\n限定范围 东西多的话可以只勾选 Selected Objects，然后下面也可以只选 Mesh：\n这样可以避免把相机和灯光啥的一起导出。\n——底下这个 Mesh 可能得小心，好像会导致啥都没导出来。\n导出之后可以预览\n轴向 newbie: Blender to UE4 settings and how to get objects oriented on the right axis : unrealengine\n详见下方 坐标轴歪了？ 章节。\n平滑？ 视频里说这里也可以把 Smoothing 改成 Face，但我不太明白，先不动。\n保存导出预设 完事儿可以存成一个 Preset 方便复用。\n坐标轴歪了？ Blender模型导出到ue4_blender骨骼导入ue方向问题_三尺三的博客-CSDN博客\nblender：\n将模型面朝X轴放置，清除旋转与缩放。\n⭐️重要：单位改成 0.01：\n可能因为 UE 里是 0.01 米等于一个单位？\n导出的时候：\nForward 选择 -Y Forward Up 选择 Z Up 注释\n原理（个人理解）：\n1 blender中将模型朝向要导入软件的正方向\n2 blender中导出时，将正方向设置为blender的正方向（-Y）\n以上两点可以在软件的背视图中查看。\n按他说的…… -Y是 Blender 的朝前，然后 UE 里则是 X 朝前？\n试试看！\nBlender 里的样子；\n导入之后：\n……歪来。\n且不说纹理还是丢失的；是不是因为那个 Rotation X=90 啊？\n问题排查 纹理的问题 抓了另一个 fbx 导入，纹理都是正常的；\n包括 Windows 的 3D 查看器也能正常显示。\n所以还是 Blender 里没能导出成功……\n还是看看远方的 Node Wrangler 吧 记住快捷键：Ctrl+Shift+T\n启用 Node Wrangler Add-on 的情况下，打开 Shader 编辑器，选中 Principled BSDF 后按下快捷键：\n注释\n「原理化（基于物理的）散射分布函数」\nBSDF = Bidirectional Scattering Distribution Function，双向散射分布函数\n然后选中所有的贴图，就会自动创建好节点。\n这样导出的模型是带贴图的，试过了。\n……Fuck.\n","date":"2023-12-22T17:59:00Z","permalink":"https://demo.stack.jimmycai.com/p/blender-%E6%A8%A1%E5%9E%8B%E6%80%8E%E4%B9%88%E5%AF%BC%E5%85%A5-unreal/","title":"Blender 模型怎么导入 Unreal"},{"content":"Rider 的两则小知识 Symbol Search 符号查询 使用默认的搜索框，哪怕设置了 Filter，\n还是会给出一大堆的无关选项。\n这个时候就应该用 Alt+\\ 来查找函数啥的：\n这个是限定范围的，\n好用很多！\nFast Surround 快速包裹 有时候会经常需要把比如 UAkSwitchValue 转成 TStrongObjectPtr\u0026lt;UAkSwitchValue\u0026gt;\n这时候可以用 Live Template 功能：\n$SELECTION$ 代表选中的文本，\n$END$ 代表插入之后的结尾放哪儿。\n注意右边有个 Mnemonic 速记符，是在这个时候用的：\n唤出的方法：\n可以用快捷键 Ctrl+E, U 来快速唤出。\n在右键的 Contextural Menu 可以显示，但这样太麻烦了。\n","date":"2023-12-20T18:28:00Z","permalink":"https://demo.stack.jimmycai.com/p/rider-%E7%9A%84%E4%B8%A4%E5%88%99%E5%B0%8F%E7%9F%A5%E8%AF%86/","title":"Rider 的两则小知识"},{"content":"B站新版封面规格说明 出处：\n《冀丶黎的动态-哔哩哔哩》\nhttps://t.bilibili.com/869395869995106404\n封面参考 《38位UP主，谁是起标题/封面之王？》\nhttps://www.bilibili.com/video/BV18G4y1s7A9\n参考：055\n参考：Tim\n","date":"2023-12-19T09:34:00Z","permalink":"https://demo.stack.jimmycai.com/p/b%E7%AB%99%E6%96%B0%E7%89%88%E5%B0%81%E9%9D%A2%E8%A7%84%E6%A0%BC%E8%AF%B4%E6%98%8E/","title":"B站新版封面规格说明"},{"content":"影视飓风的字幕样式和插件 关联：231215_B站新版封面规格说明\n影视飓风的字幕样式 《UP主们都怎么做字幕？调研100位UP，他们的秘密是\u0026hellip;》\nhttps://www.bilibili.com/video/BV1GY4y1U7oq\n字幕字体 字幕样式 影视飓风的视频插件 《月更10期？！影视飓风用什么做视频？》\nhttps://www.bilibili.com/video/BV1mv411e7DE\n","date":"2023-12-15T12:57:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E5%BD%B1%E8%A7%86%E9%A3%93%E9%A3%8E%E7%9A%84%E5%AD%97%E5%B9%95%E6%A0%B7%E5%BC%8F%E5%92%8C%E6%8F%92%E4%BB%B6/","title":"影视飓风的字幕样式和插件"},{"content":"让自己去做一件事的两个小技巧 提前想象自己在做这件事的画面 如果有任务清单的话，先打勾，倒逼自己做完这事儿，达成因果一致！\n（什么如果电话亭，笑） ","date":"2023-11-03T15:55:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E8%AE%A9%E8%87%AA%E5%B7%B1%E5%8E%BB%E5%81%9A%E4%B8%80%E4%BB%B6%E4%BA%8B%E7%9A%84%E4%B8%A4%E4%B8%AA%E5%B0%8F%E6%8A%80%E5%B7%A7/","title":"让自己去做一件事的两个小技巧"},{"content":"网易云的音乐封面歌词获取（更新） 起因 之前的两个动作不生效了，重新想办法。\n封面 改成直接读取 元素了：\n用音乐的原链接打开 HTML，然后提取 XPATH：\n/html/head/meta[@property=\u0026quot;og:image\u0026quot;]\n顺便，在浏览器其实可以 F12 然后右键，复制 XPATH：\n歌词 暂时没找到怎么办……\n直接用了一个第三方的 API 服务：\n网易云音乐 NodeJS 版 API\n虽然 NodeJs 啥的好像很麻烦，但是这个部署好了的 Vercel 站点是直接可以用的；\n比如查歌词就是：\napi.music.areschang.top/lyric?id=1501530173\n更多内容见文档：\n网易云音乐 NodeJS 版 API 文档\n回头可以再研究一下，反正是开源的。\nGithub 库也 Fork 过来了。\nEasySpider 这个简单试了一下，有点麻烦，没搞明白……下次再说！\n易采集EasySpider下载地址\n","date":"2023-10-17T16:18:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E7%BD%91%E6%98%93%E4%BA%91%E7%9A%84%E9%9F%B3%E4%B9%90%E5%B0%81%E9%9D%A2%E6%AD%8C%E8%AF%8D%E8%8E%B7%E5%8F%96%E6%9B%B4%E6%96%B0/","title":"网易云的音乐封面歌词获取（更新）"},{"content":"QQ NT 版的一些文件结构探索 起因 想解决自己电脑端看不到商城表情的问题。\n结果顺带发现了几个有点意思的路径。\n默认表情 ..\\nt_qq\\global\\nt_data\\Emoji\\emoji-resource\\sysface_res\\apng\n有趣的是其实好几种格式这里都有——甚至还有 apng！\n这里还有个叫 QLotte 的文件，感觉是和那个动态库 Lottie 有关？\n关联推荐表情 ..\\[QQ号]\\nt_qq\\nt_data\\Emoji\\emoji-related\\emoji\\\n那些打字出现的关联表情都会在这儿，可以看到好多类似含义的缓存图片。\n这些图片默认也是没有后缀名的，但是没有关系，可以直接用 QK 动作一键添加。\n可惜不知道和文本的关系存在哪里。\nwords.json 里存着一些文字，应该是能触发出关联推荐的关键字吧。\n应用 比如刚输入完文字然后闪过一个想要的表情，没能选中。\n以前我都是再反复翻好多页尝试找出来的，现在可以直接在这个文件夹按修改时间查找，一下子就找到了。\n自定义表情（漫游表情） ..\\[QQ号]\\nt_qq\\nt_data\\Emoji\\personal_emoji\\Ori\n这里则是——自定义表情！\n以前可以导出 eif 的，现在新版不支持了，但是反而可以直接看到图片文件。\n所以直接备份这个文件夹就可以啦。\n顺便一提，会看到一些不知道怎么混进来的图片 🤔\n（可能是其他人的自定义表情？）\n表情商店 ..\\[QQ号]\\nt_qq\\nt_data\\Emoji\\marketface\n这里能看到出现在聊天框过的商城表情包。\n不管是别人发的（哪怕自己并不拥有）的表情还是自己发的表情，都在里面。\n会按照表情包合集区分文件夹。\n💡 回头批量提取出来？\n表情商店图片 ..\\[QQ号]\\nt_qq\\nt_data\\Emoji\\emoji-recv\n这里就是接收的表情包啦（应该也包括自己发出去的）。\n会按照月份分开文件夹保存。\n❗ 感觉适合用来作为 Quicker 表情包检索动作的素材来源！\n不过大概需要先去重……\n聊天图片 ..\\[QQ号]\\nt_qq\\nt_data\\Pic\\2023-10\\Ori\n和上面的表情包 Emote区分开来的其他图片。\n（也不知道是靠什么区分的……）\n其他媒体文件 还有 Video 啥的，同理，这里不再赘述……\n不过有个 ptt 不知道是啥，里面是 amr 格式的文件。\n企业微信的表情包 顺便，之前发现的：\nE:\\Documents\\WXWork\\1688853793444655\\Emotion\\2019-12\n可以通过双击图片快速打开：\n","date":"2023-10-08T16:19:00Z","permalink":"https://demo.stack.jimmycai.com/p/qq-nt-%E7%89%88%E7%9A%84%E4%B8%80%E4%BA%9B%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E6%8E%A2%E7%B4%A2/","title":"QQ NT 版的一些文件结构探索"},{"content":"子弹笔记的一些简单尝试 起因 在用「事线」作记录，\n然后想到有没有什么「基于纯文本」的格式化方法。\n首先当然是 Markdown 了，但是……\n如果是列表呢？\n「子弹笔记」\n柴老师讲解 以下是子弹笔记的要点以及几种常见的符号：\n要点：\n子弹笔记是一种组织和记录信息的方法，旨在提高学习和记忆效率。 它采用简洁明了的结构，将信息分为主题、子主题和细节，并使用符号进行标记和分类。 子弹笔记的核心原则是快速记录和简化信息，以便后续回顾和复习。 符号：\n•（圆点）：用于表示主要主题或标题。 -（短横线）：用于表示子主题或次要标题。 ▸（箭头）：用于表示细节或子细节。 ○（空心圆）：用于标记待办事项或任务。 ×（叉号）：用于表示已完成的任务。 !（感叹号）：用于强调重要信息或提醒。 *（星号）：用于标记特别重要的信息或注释。 这些是子弹笔记的基本要点和常见符号，你可以根据自己的需求和喜好进行适当的调整和扩展。希望对你有所帮助！\n对我而言 1 2 3 4 * 这个是默认的符号 ## 这个是标题（对，没必要都一个层级） \u0026gt; 细节？ ! 重要 …… 那感觉可以这样：\n注释\n主题 一条 两条 取消的事儿 （手写就划掉） 完成的事儿 ✅ 重要的事儿 ❗ 子内容就用缩进来做 手写也方便 ——结合 MD 语法的“M式子弹笔记”，挺好？\n231011_后续：便笺上的应用 嗨呀，忘了是写在这儿还是写在「事线」上的了……\n*笔记应用多起来以后就是会有这种麻烦 *！\n刚才试了一下，发现其实这种简化的子弹写法对于 Windows 自带便笺也是适用的：\n只不过因为不支持层级，所以可能还是要用那个 - 等于子级的写法。\n然后「强调」就用加粗；\n完成或者取消都可以用「划掉」。\n这样就可以啦！\n","date":"2023-10-08T16:16:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E5%AD%90%E5%BC%B9%E7%AC%94%E8%AE%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E7%AE%80%E5%8D%95%E5%B0%9D%E8%AF%95/","title":"子弹笔记的一些简单尝试"},{"content":"自己的减肥经验总结 起因 开始新一阶段的减肥计划了。\n目前的成果：88kg 到 69kg，从「肥胖」步入「标准」（略健壮）；\n新的（最难的）目标：62kg。\n其实用体重衡量是一个非常不合理的行为，应该从体脂率等等更全面的维度入手。但我是个人的执念了，哈哈。真正的目标应该是「很好的身材 AKA. 六块腹肌」。\n停滞的原因分析 每个周末的空腹有氧和体能（无氧）没了，非但如此还会多吃；\n不过「空腹」的有效性其实待考证，甚至一般来说是不建议空腹的因为会低血糖。\n而且确实锻炼的频率也明显低了。\n训记App 里能看到的。\n虽然说一些资料（斌卡的书）里提到，在进行大量锻炼之后多吃一些是没啥问题的，不会变胖，反而长肌肉。\n但——从这个视频来看，多吃的卡路里是很轻易就能超过多运动的消耗的。\n所以如果是减脂，无论如何都要控制摄入，仗着“今天锻炼了可以多吃一点”的话，热量缺口不会骗你，能量守恒定律也不会。\n（以及哪怕每周或者每两周一次的「欺骗餐」，这个视频里说也应该是不超过一天的基本摄入量（零缺口而不是就直接暴吃）\n新的尝试：TABATA TABATA：HIIT 的一种，属于比较猛的。\n原教旨主义认为心率一定要满足一定要求，那种慢吞吞的单纯用了 $(20s+10s)\\times8$ 的方法是伪 TABATA。\n（也会有效，但是另一回事儿了）\n4分钟够吗？ 其实原版来说……太够了，一周也就训练4~6次。\n但是对减脂来说总感觉「不太到位」？\n或者说，按之前健身房做体能训练的经验，那也是拆分成几组，然后做满40分钟这样。\n那可以把一次4分钟的 TABATA 作为「一组」，然后中间休息1~2分钟，总共做4组。\n这样一来就是比较到位的一次完整锻炼了。\n坚持不了这么久那就再说，哈哈。\n注释\n虽说如此，一定要注意强度和安全!\n2023.11.03 更新 现在是67kg多点，其实进度也还是缓慢。\nTABATA 之前简单尝试了一下……但是没有坚持很久。\n感觉还是，对身体负担比较大，容易受伤。\n那现在来看，主要还是：空腹有氧少了。\n最近比较好的两个改进是：\n看了 ████ 视频之后，成功自己做了每天的摄入记录，对于自己的摄入情况有了一个明确的、数据化的结果（真的做起来也没那么难！） 计算了 ████，和上面那条相呼应，了解了自己应该的摄入比例 算是重新稳定下来自己去健身房一周三次的力量训练。力训还是不能落下。 然后也测了几次 Inbody，好消息是肌肉确实没再那么掉了……目前是堪堪维持在 32，不如当年的 33 的水平。\n但在肌肉量不变的情况下，脂肪和体重在下降。挺好的。\n那么接下来的话，自己练也应该尝试去加大一点点重量了，不然的话，就，没有受到足够的「应激」肌肉也没理由继续增长。\n注释\n接下来呢？ 打算是：\n早上的空腹有氧还是恢复起来，放进 OKR 里每周跳4天吧（躺在床上玩手机就纯纯浪费） 还是试一下 16+8 的轻断食，反正对我来说也就是午饭 11 点再吃吐司，并不算什么很费事儿的调整；晚饭也是6点半吃的，没啥问题。 每周三次的力训也保持下去，可以在安全范围内尝试加一点重量上去了 然后11月的目标定高一点，现在是 67.5kg 的样子，月底希望能直接冲到 65 kg！\n","date":"2023-09-21T11:09:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E8%87%AA%E5%B7%B1%E7%9A%84%E5%87%8F%E8%82%A5%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/","title":"自己的减肥经验总结"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] One line code block 1 \u0026lt;p\u0026gt;A paragraph\u0026lt;/p\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-09-07T00:00:00Z","permalink":"https://demo.stack.jimmycai.com/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo theme Stack supports the creation of interactive image galleries using Markdown. It\u0026rsquo;s powered by PhotoSwipe and its syntax was inspired by Typlog.\nTo use this feature, the image must be in the same directory as the Markdown file, as it uses Hugo\u0026rsquo;s page bundle feature to read the dimensions of the image. External images are not supported.\nSyntax 1 ![Image 1](1.jpg) ![Image 2](2.jpg) Result Photo by mymind and Luke Chesser on Unsplash\n","date":"2023-08-26T00:00:00Z","image":"https://demo.stack.jimmycai.com/p/image-gallery/2_hubce42636ecacc1a380b462f3110efcec_37455_120x120_fill_q75_box_smart1.jpg","permalink":"https://demo.stack.jimmycai.com/p/image-gallery/","title":"Image gallery"},{"content":"For more details, check out the documentation.\nBilibili video Tencent video YouTube video Generic video file Your browser doesn't support HTML5 video. Here is a link to the video instead. Gist GitLab Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Photo by Codioful on Unsplash\n","date":"2023-08-25T00:00:00Z","image":"https://demo.stack.jimmycai.com/p/shortcodes/cover_huec3c3e34981507583e214021ad1b9a4b_12942_120x120_fill_q75_box_smart1.jpg","permalink":"https://demo.stack.jimmycai.com/p/shortcodes/","title":"Shortcodes"},{"content":"Stack has built-in support for math typesetting using KaTeX.\nIt\u0026rsquo;s not enabled by default side-wide, but you can enable it for individual posts by adding math: true to the front matter. Or you can enable it side-wide by adding math = true to the params.article section in config.toml.\nInline math This is an inline mathematical expression: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n1 $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$ Block math $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n1 2 3 $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi),e^{2 \\pi i \\xi x},d\\xi $$\n1 2 3 $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ ","date":"2023-08-24T00:00:00Z","permalink":"https://demo.stack.jimmycai.com/p/math-typesetting/","title":"Math Typesetting"},{"content":"测测 Steam 账号价值！ 起因 其实是和朋友聊天聊到这个。\n1 2 3 4 5 6 left: 朋友 right: Moy \u0026lt; 话说 \u0026lt; 你Steam库存里的游戏总价要多少 \u0026lt; 我觉得会是笔巨款 \u0026gt; 谁、谁会去在意这种事情呢，哈哈……哈哈哈 虽然很心虚不过还是查了查自己的记账，从 2017 年起到现在大概是1W4：\n可以看到还是比较稳定的……除了第一年买的比较多，之后每年2k左右？\n大概也就是手游3单648嘛\n最近几年因为 Steam 上大部分感兴趣的游戏都已经入库了，只买些新游戏为主，所以开销显著下降。\n但不是谁都有我这样强迫症的记账习惯，所以又顺便上网搜了一下，看到有两个网站可以查询自己 Steam 的账号价值。\nSteam 官方消费记录查询 打开这个网站：\n帐户数据\n（认准域名是 steampowered.com 噢，谨防诈骗网站）\n登录 Steam 账号的情况下就能查到自己历来的消费记录了：\n可以看到是 2708.97 美元，换算过来……将近2W人民币。\n比我自己记录的多了不少，可能是因为买游戏作为礼物送朋友的也算上了。\n账号游戏估值查询：Steam 计算器 Steam Calculator and SteamID Finder · SteamDB\n这个网站是大名鼎鼎的 SteamDB，同样提供了查询 Steam 账号价值的功能。\n但是它毕竟不是 Valve 官方，所以只能从你的游戏库来推测这些游戏价值几何。\n登录之后输入自己的 Steam ID 就可以查询：\nSteam ID 可以通过点击自己的个人账户页面查看，比如：\n把网址复制下来粘贴进去就可以。\n下面的选框可以切换货币单位，人民币就换成 Chinese Yuan：\n然后就可以点击 Get Disappointed in your life（对你的人生感到失望吧） 按钮来进行查询了！\n这个网站不仅会列出估值，还会综合游戏时间之类的因素，来得出各种数据……\n像是：\nxx out of xxx games played（第一个进度条）：买了的游戏里玩过多少个 Average price：平均每个游戏价值多少 Average price per houer：平均每小时游戏时间花了多少钱 Hours on record：记录的总游戏时长 Average playtime：平均每款游戏玩了多久 Today\u0026rsquo;s prices：在今天购买所有产品需要花费的金额 因为最近在夏促所以显然我的账号贬值了不少……哈哈……\n底下还有更多详细的数据，这里就不赘述了。\n游戏列表 点击左侧的 Games 按钮的话，能看到具体的游戏清单：\n合着我总共6000多个小时的游戏时间里有2580小时是在直播啊……哈……\n那我玩游戏的时间也太少了！\n1 2 3 4 5 6 7 l: 脑内的评论小人 r: Moy \u0026lt; 你直播这么久一定舰长很多吧？ \u0026gt; 啊……哈，哈哈……直播嘛，重要的是开心咯 \u0026gt; （我自己都没想到我播了这么久的时长？！） 一点感想 其实真要看的话……我 Steam 账号注册了9年多，实际在玩儿游戏算八年，平均下来在 Steam 上的游戏花销确实就是2k+/年。\n学生党可能会觉得有点多，但阿墨是很多年的社畜啦。\n以「娱乐活动」来说……一年两千吗，嗯，真的是偏廉价的娱乐了。\n出去旅游可能机票都要两千起，买点儿电子产品也是随随便便就几千没了。更别说一些比较烧钱的爱好比如摄影（？）和手游。\n可能相比之下……看电影会是差不多的「廉价娱乐」？算一张票60的话，2500可以看40部电影，平均每个月看3.3部……也很爽了嘿。\n总之，能用相对低廉的价格体验到多次多彩的旅程和故事，我真是太爱电子游戏了。\n谢谢开发者们。\n好，这就是今天的分享！希望对你有帮助！\n让我们一起对自己的人生感到失望吧！（bushi）\n","date":"2023-07-13T11:53:00Z","image":"https://demo.stack.jimmycai.com/p/%E6%B5%8B%E6%B5%8B%E4%BD%A0%E7%9A%84-steam-%E8%B4%A6%E5%8F%B7%E4%BB%B7%E5%80%BC%E5%90%A7/Assets/Pasted-image-20230713115838_hub12262226e9a61afed778863019d4400_305388_120x120_fill_box_smart1_3.png","permalink":"https://demo.stack.jimmycai.com/p/%E6%B5%8B%E6%B5%8B%E4%BD%A0%E7%9A%84-steam-%E8%B4%A6%E5%8F%B7%E4%BB%B7%E5%80%BC%E5%90%A7/","title":"测测你的 Steam 账号价值吧！"},{"content":"对「正事儿」的拖延和抗拒 感想 感觉对那种「教程」类的东西……都会更加不愿意去看。\n比如5分钟的一个视频，可能就一直拖着，然后转头刷论坛刷半小时……\n为啥我会对于「正经事」更加抗拒呢？\n可能是下意识想要更加“严肃对待” 比如这篇文章有用，需要划线啊、作笔记啊 可能是想要有实践用到的机会再看 可能是想要能直接一起尝试，但这样会花更多精力 就尝试解决看看吧。\n感觉归根结底还是「会把这件事看得太重」——这也是我大部分拖延症的起因。\n然后这也导致「积累的资料越来越多」……这样的情况。\n要么就是像最近对 Discord 的应用这样，尽量轻量化地处理“学习消化”环节，甚至只留下线索就可以？\n后来又想了想，大概是和各种拖延症的成因一样：大脑不想“费脑子”。\n正经教程视频且不说有的需要实践和笔记啥的，就，比起娱乐视频，这些视频的学习成本是更高的，需要一些思考和记忆。\n大脑就：摆了，看点儿乐呵的吧！\n2023.11.03 补充 其实就是最近看到的一个观点，叫做「烂开始」：\n这也是破解什么完美主义啊的最佳实践方案。\n相对应的另一个感想就是：\n我一旦给一件事做越多的「准备」，那其实也在加重它的「难度」。\n最后就越难真的做出来。\n反而是心血来潮随手就做了的，更能成功完成。\n说了很多遍了，非常关键的一个要点：\nDone is better than perfect.\n——能做完就是最牛逼的！\n2024.02.04 补充 最近看了一些心理学啊人类行为研究之类的内容……\n所以尝试提出另一个新的技巧：\n握紧自己的拳头，获得一种掌控感。\n原理上来说，人的「思维」和「行为」是会互相影响的。\n你以为自己怎么想然后会影响身体——是这样没错；\n但反过来，你的身体状态也会影响你的想法。\n更多的可以汇总到 ████ 笔记里。\n","date":"2023-07-10T15:19:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E5%AF%B9%E6%AD%A3%E4%BA%8B%E5%84%BF%E7%9A%84%E6%8B%96%E5%BB%B6%E5%92%8C%E6%8A%97%E6%8B%92/","title":"对「正事儿」的拖延和抗拒"},{"content":"晕3D游戏的解药——晕车药 如题。\n之前有听人说什么3DM的鸟姐边吃晕车药边玩3D游戏，当时就当个轶闻听听。\n但是最近想玩儿《星际拓荒》，晕3D晕得厉害……半个小时就会受不了。\n于是买了晕车药试水。\n结论：有效！\n中途会有一种“大概能感知到大脑开始晕3D了但是被药物给压制住了”的奇妙感受。\n像是打了麻醉之后做手术那样，能有一些「触感」但没有「痛觉」。\n（买的是日本那个啥白兔的；同时也买了国产的飞塞乐，下次再试试！\n飞塞乐也是有用的！\n而且吃晕车药玩了几天游戏之后，再不吃药玩好像也没那么容易晕了~\n","date":"2023-06-25T11:10:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E6%99%953d%E6%B8%B8%E6%88%8F%E7%9A%84%E8%A7%A3%E8%8D%AF%E6%99%95%E8%BD%A6%E8%8D%AF/","title":"晕3D游戏的解药——晕车药"},{"content":"暴饮暴食式打游戏 昨天忙完了所有琐事然后开始《Outer Wilds》，一口气打了五六个小时……1点钟才睡。\n前篇：2023.06.25 晕3D游戏的解药——晕车药\n爽吗？\n很爽！\n不过嗓子有点哑了；然后一些日常惯例都没做。\n什么写日记啊今日回顾啊……\n第二天起来，一拍额头。\n感觉就有点像吃大餐，上了一盘烤鸡，嚯！超好吃，嘎嘎开炫。\n然后从头到尾吃烤鸡，水也不喝别的菜也不碰。\n完事儿回过头来就会觉得，诶，差点滋味。\n（但爽是真的爽xs）\n","date":"2023-06-25T11:01:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E6%9A%B4%E9%A5%AE%E6%9A%B4%E9%A3%9F%E5%BC%8F%E6%89%93%E6%B8%B8%E6%88%8F/","title":"暴饮暴食式打游戏！"},{"content":"日本的七元一支的笔！ 大概感受就是：\n有用，但没商店展示里吹的那么好 但还是有点儿用，比起普通的笔（需要配合它自家产品） 不过终究敌不过物理学准则 首先，买这些笔是为了给最近看的一本书做高亮用的。\n最近不管是看电子文章还是实体书都想要画线。\n电脑上用了「五彩」（试过 Cubox）还有 Omnivore 这两款工具。\n为了匹配习惯，看实体书的时候也想画线——就需要买荧光笔了。\n选了日本斑马牌的，看看成色。\n（该渗墨还是会渗墨）\n结果 高光笔（荧光笔）表现不错；\n水笔一般，但比起普通的水笔（晨光的）要干得快一些。\n荧光笔在普通水笔上还是渗墨，但是配合自家水笔确实可以几乎实时画上去不渗。\n两者在珠光纸上都还是会败于物理学定律，哈哈。\n","date":"2023-06-19T15:02:00Z","permalink":"https://demo.stack.jimmycai.com/p/%E6%97%A5%E6%9C%AC%E7%9A%84%E4%B8%83%E5%85%83%E4%B8%80%E6%94%AF%E7%9A%84%E7%AC%94/","title":"日本的七元一支的笔！"}]